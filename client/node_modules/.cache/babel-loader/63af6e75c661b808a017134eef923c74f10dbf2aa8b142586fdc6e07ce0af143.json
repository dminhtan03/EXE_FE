{"ast":null,"code":"// src/utils/geminiApi.js\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\n\n// Khởi tạo với API Key (chỉ chứa ASCII)\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\nexport const callGeminiWithPrompt = async prompt => {\n  const system_prompt = `Bạn là một trợ lý du lịch thông minh, có thể tư vấn dựa trên thời gian, địa điểm, mục đích chuyến đi. Với mỗi câu hỏi, hãy cung cấp:\n- Dự báo thời tiết (nếu có địa điểm và ngày cụ thể),\n- Gợi ý hoạt động phù hợp,\n- Danh sách vật dụng nên mang theo,\n- Lưu ý đặc biệt nếu có.\nTrả lời ngắn gọn, dễ hiểu, rõ ràng từng mục, thực tế và giới hạn trong 200 tokens.`;\n  try {\n    // Chọn model\n    const model = genAI.getGenerativeModel({\n      model: \"gemini-1.5-flash\"\n    });\n\n    // Truyền prompt vào body → KHÔNG phải header\n    const result = await model.generateContent([{\n      role: \"system\",\n      parts: [{\n        text: system_prompt\n      }]\n    }, {\n      role: \"user\",\n      parts: [{\n        text: prompt\n      }]\n    }]);\n    return result.response.text();\n  } catch (error) {\n    console.error(\"Lỗi Gemini API:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["GoogleGenerativeAI","genAI","process","env","REACT_APP_GEMINI_API_KEY","callGeminiWithPrompt","prompt","system_prompt","model","getGenerativeModel","result","generateContent","role","parts","text","response","error","console"],"sources":["D:/Project_EXE/client/src/utils/gptApi.js"],"sourcesContent":["// src/utils/geminiApi.js\r\nimport { GoogleGenerativeAI } from \"@google/generative-ai\";\r\n\r\n// Khởi tạo với API Key (chỉ chứa ASCII)\r\nconst genAI = new GoogleGenerativeAI(process.env.REACT_APP_GEMINI_API_KEY);\r\n\r\nexport const callGeminiWithPrompt = async (prompt) => {\r\n  const system_prompt = `Bạn là một trợ lý du lịch thông minh, có thể tư vấn dựa trên thời gian, địa điểm, mục đích chuyến đi. Với mỗi câu hỏi, hãy cung cấp:\r\n- Dự báo thời tiết (nếu có địa điểm và ngày cụ thể),\r\n- Gợi ý hoạt động phù hợp,\r\n- Danh sách vật dụng nên mang theo,\r\n- Lưu ý đặc biệt nếu có.\r\nTrả lời ngắn gọn, dễ hiểu, rõ ràng từng mục, thực tế và giới hạn trong 200 tokens.`;\r\n\r\n  try {\r\n    // Chọn model\r\n    const model = genAI.getGenerativeModel({ model: \"gemini-1.5-flash\" });\r\n\r\n    // Truyền prompt vào body → KHÔNG phải header\r\n    const result = await model.generateContent([\r\n      { role: \"system\", parts: [{ text: system_prompt }] },\r\n      { role: \"user\", parts: [{ text: prompt }] },\r\n    ]);\r\n\r\n    return result.response.text();\r\n  } catch (error) {\r\n    console.error(\"Lỗi Gemini API:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,kBAAkB,QAAQ,uBAAuB;;AAE1D;AACA,MAAMC,KAAK,GAAG,IAAID,kBAAkB,CAACE,OAAO,CAACC,GAAG,CAACC,wBAAwB,CAAC;AAE1E,OAAO,MAAMC,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,MAAMC,aAAa,GAAG;AACxB;AACA;AACA;AACA;AACA,mFAAmF;EAEjF,IAAI;IACF;IACA,MAAMC,KAAK,GAAGP,KAAK,CAACQ,kBAAkB,CAAC;MAAED,KAAK,EAAE;IAAmB,CAAC,CAAC;;IAErE;IACA,MAAME,MAAM,GAAG,MAAMF,KAAK,CAACG,eAAe,CAAC,CACzC;MAAEC,IAAI,EAAE,QAAQ;MAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAEP;MAAc,CAAC;IAAE,CAAC,EACpD;MAAEK,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAER;MAAO,CAAC;IAAE,CAAC,CAC5C,CAAC;IAEF,OAAOI,MAAM,CAACK,QAAQ,CAACD,IAAI,CAAC,CAAC;EAC/B,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}