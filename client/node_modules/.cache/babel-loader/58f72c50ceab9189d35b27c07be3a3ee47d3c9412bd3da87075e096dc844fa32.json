{"ast":null,"code":"// src/utils/geminiApi.js\nimport { getWeather } from \"./weatherApi\";\nexport const callGeminiWithPrompt = async (location, date = \"today\", userPrompt = \"\") => {\n  try {\n    var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2;\n    // 1. G·ªçi API th·ªùi ti·∫øt\n    const weather = await getWeather(location, date);\n\n    // Format d·ªØ li·ªáu th·ªùi ti·∫øt ƒë·ªÉ nh√©t v√†o prompt\n    const weatherInfo = `\nƒê·ªãa ƒëi·ªÉm: ${weather.location}\nNg√†y: ${weather.date}\nüå° Nhi·ªát ƒë·ªô: ${weather.temp}¬∞C\nüå§ Th·ªùi ti·∫øt: ${weather.description}\nüíß ƒê·ªô ·∫©m: ${weather.humidity}%\nüí® Gi√≥: ${weather.wind} m/s\n`;\n\n    // 2. Prompt cho Gemini\n    const systemPrompt = `B·∫°n l√† m·ªôt tr·ª£ l√Ω du l·ªãch th√¥ng minh.\nD∆∞·ªõi ƒë√¢y l√† d·ªØ li·ªáu th·ªùi ti·∫øt th·ª±c t·∫ø ƒë√£ l·∫•y ƒë∆∞·ª£c t·ª´ API:\n${weatherInfo}\n\nD·ª±a tr√™n th√¥ng tin tr√™n, h√£y ƒë∆∞a ra g·ª£i √Ω theo ƒë√∫ng c·∫•u tr√∫c:\nüå§ D·ª± b√°o th·ªùi ti·∫øt: [...]\nüéØ G·ª£i √Ω ho·∫°t ƒë·ªông: [...]\nüéí Danh s√°ch v·∫≠t d·ª•ng: [...]\n‚ö†Ô∏è L∆∞u √Ω ƒë·∫∑c bi·ªát: [...]\n`;\n    const payload = {\n      contents: [{\n        role: \"user\",\n        parts: [{\n          text: `${systemPrompt}\\n\\nY√™u c·∫ßu th√™m: ${userPrompt}`\n        }]\n      }],\n      generationConfig: {\n        temperature: 0.7,\n        maxOutputTokens: 500\n      }\n    };\n    const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyD2l-YV0kiDkxdmNrac-dO-THEQVSWKdtE\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!response.ok) {\n      const text = await response.text();\n      throw new Error(`L·ªói Gemini: ${response.status} - ${text}`);\n    }\n    const data = await response.json();\n    return (data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : _data$candidates$$con2.map(p => p.text).join(\"\\n\")) || \"Kh√¥ng c√≥ ph·∫£n h·ªìi.\";\n  } catch (error) {\n    console.error(\"Gemini API error:\", error);\n    return \"ƒê√£ x·∫£y ra l·ªói khi g·ªçi Gemini API.\";\n  }\n};","map":{"version":3,"names":["getWeather","callGeminiWithPrompt","location","date","userPrompt","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","weather","weatherInfo","temp","description","humidity","wind","systemPrompt","payload","contents","role","parts","text","generationConfig","temperature","maxOutputTokens","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","candidates","content","map","p","join","error","console"],"sources":["D:/Project_EXE/client/src/utils/gptApi.js"],"sourcesContent":["// src/utils/geminiApi.js\r\nimport { getWeather } from \"./weatherApi\";\r\n\r\nexport const callGeminiWithPrompt = async (location, date = \"today\", userPrompt = \"\") => {\r\n  try {\r\n    // 1. G·ªçi API th·ªùi ti·∫øt\r\n    const weather = await getWeather(location, date);\r\n\r\n    // Format d·ªØ li·ªáu th·ªùi ti·∫øt ƒë·ªÉ nh√©t v√†o prompt\r\n    const weatherInfo = `\r\nƒê·ªãa ƒëi·ªÉm: ${weather.location}\r\nNg√†y: ${weather.date}\r\nüå° Nhi·ªát ƒë·ªô: ${weather.temp}¬∞C\r\nüå§ Th·ªùi ti·∫øt: ${weather.description}\r\nüíß ƒê·ªô ·∫©m: ${weather.humidity}%\r\nüí® Gi√≥: ${weather.wind} m/s\r\n`;\r\n\r\n    // 2. Prompt cho Gemini\r\n    const systemPrompt = `B·∫°n l√† m·ªôt tr·ª£ l√Ω du l·ªãch th√¥ng minh.\r\nD∆∞·ªõi ƒë√¢y l√† d·ªØ li·ªáu th·ªùi ti·∫øt th·ª±c t·∫ø ƒë√£ l·∫•y ƒë∆∞·ª£c t·ª´ API:\r\n${weatherInfo}\r\n\r\nD·ª±a tr√™n th√¥ng tin tr√™n, h√£y ƒë∆∞a ra g·ª£i √Ω theo ƒë√∫ng c·∫•u tr√∫c:\r\nüå§ D·ª± b√°o th·ªùi ti·∫øt: [...]\r\nüéØ G·ª£i √Ω ho·∫°t ƒë·ªông: [...]\r\nüéí Danh s√°ch v·∫≠t d·ª•ng: [...]\r\n‚ö†Ô∏è L∆∞u √Ω ƒë·∫∑c bi·ªát: [...]\r\n`;\r\n\r\n    const payload = {\r\n      contents: [\r\n        {\r\n          role: \"user\",\r\n          parts: [\r\n            { text: `${systemPrompt}\\n\\nY√™u c·∫ßu th√™m: ${userPrompt}` }\r\n          ],\r\n        },\r\n      ],\r\n      generationConfig: {\r\n        temperature: 0.7,\r\n        maxOutputTokens: 500,\r\n      },\r\n    };\r\n\r\n    const response = await fetch(\r\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyD2l-YV0kiDkxdmNrac-dO-THEQVSWKdtE\",\r\n      {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(payload),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`L·ªói Gemini: ${response.status} - ${text}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    return (\r\n      data?.candidates?.[0]?.content?.parts?.map((p) => p.text).join(\"\\n\") ||\r\n      \"Kh√¥ng c√≥ ph·∫£n h·ªìi.\"\r\n    );\r\n  } catch (error) {\r\n    console.error(\"Gemini API error:\", error);\r\n    return \"ƒê√£ x·∫£y ra l·ªói khi g·ªçi Gemini API.\";\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,UAAU,QAAQ,cAAc;AAEzC,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,GAAG,OAAO,EAAEC,UAAU,GAAG,EAAE,KAAK;EACvF,IAAI;IAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA;IACF;IACA,MAAMC,OAAO,GAAG,MAAMT,UAAU,CAACE,QAAQ,EAAEC,IAAI,CAAC;;IAEhD;IACA,MAAMO,WAAW,GAAG;AACxB,YAAYD,OAAO,CAACP,QAAQ;AAC5B,QAAQO,OAAO,CAACN,IAAI;AACpB,eAAeM,OAAO,CAACE,IAAI;AAC3B,gBAAgBF,OAAO,CAACG,WAAW;AACnC,YAAYH,OAAO,CAACI,QAAQ;AAC5B,UAAUJ,OAAO,CAACK,IAAI;AACtB,CAAC;;IAEG;IACA,MAAMC,YAAY,GAAG;AACzB;AACA,EAAEL,WAAW;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;IAEG,MAAMM,OAAO,GAAG;MACdC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,MAAM;QACZC,KAAK,EAAE,CACL;UAAEC,IAAI,EAAE,GAAGL,YAAY,qBAAqBX,UAAU;QAAG,CAAC;MAE9D,CAAC,CACF;MACDiB,gBAAgB,EAAE;QAChBC,WAAW,EAAE,GAAG;QAChBC,eAAe,EAAE;MACnB;IACF,CAAC;IAED,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sIAAsI,EACtI;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACd,OAAO;IAC9B,CACF,CAAC;IAED,IAAI,CAACQ,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMX,IAAI,GAAG,MAAMI,QAAQ,CAACJ,IAAI,CAAC,CAAC;MAClC,MAAM,IAAIY,KAAK,CAAC,eAAeR,QAAQ,CAACS,MAAM,MAAMb,IAAI,EAAE,CAAC;IAC7D;IAEA,MAAMc,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;IAElC,OACE,CAAAD,IAAI,aAAJA,IAAI,wBAAA7B,gBAAA,GAAJ6B,IAAI,CAAEE,UAAU,cAAA/B,gBAAA,wBAAAC,iBAAA,GAAhBD,gBAAA,CAAmB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAArBD,iBAAA,CAAuB+B,OAAO,cAAA9B,qBAAA,wBAAAC,sBAAA,GAA9BD,qBAAA,CAAgCY,KAAK,cAAAX,sBAAA,uBAArCA,sBAAA,CAAuC8B,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACnB,IAAI,CAAC,CAACoB,IAAI,CAAC,IAAI,CAAC,KACpE,oBAAoB;EAExB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,OAAO,mCAAmC;EAC5C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}