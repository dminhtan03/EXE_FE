{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project_EXE\\\\client\\\\src\\\\components\\\\ChatPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatPopup.css';\nimport { callGptWithImage } from '../utils/gptApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChatPopup() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const togglePopup = () => setIsOpen(!isOpen);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    if (isOpen) scrollToBottom();\n  }, [messages, isOpen]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput('');\n    setLoading(true);\n    try {\n      const response = await callGptWithImage(input);\n      const aiMessage = {\n        sender: 'ai',\n        text: response\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: 'ai',\n        text: 'Lá»—i khi pháº£n há»“i, vui lÃ²ng thá»­ láº¡i.'\n      }]);\n    } finally {\n      setLoading(false);\n      setTimeout(scrollToBottom, 100);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: togglePopup,\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"T\\u01B0 v\\u1EA5n AI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePopup,\n          children: \"\\u2716\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `chat-message ${msg.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: msg.text.replace(/\\n/g, '<br />')\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: \"Nh\\u1EADp tin nh\\u1EAFn...\",\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: loading,\n          children: loading ? '...' : 'Gá»­i'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(ChatPopup, \"vAZhXZOpuoEglysvF+uKqtHe6Jo=\");\n_c = ChatPopup;\nexport default ChatPopup;\nvar _c;\n$RefreshReg$(_c, \"ChatPopup\");","map":{"version":3,"names":["React","useState","useRef","useEffect","callGptWithImage","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatPopup","_s","isOpen","setIsOpen","messages","setMessages","input","setInput","loading","setLoading","messagesEndRef","togglePopup","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","sendMessage","trim","userMessage","sender","text","prev","response","aiMessage","error","setTimeout","handleKeyPress","e","key","shiftKey","preventDefault","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","dangerouslySetInnerHTML","__html","replace","ref","value","onChange","target","onKeyDown","placeholder","rows","disabled","_c","$RefreshReg$"],"sources":["D:/Project_EXE/client/src/components/ChatPopup.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './ChatPopup.css';\r\nimport { callGptWithImage } from '../utils/gptApi';\r\n\r\nfunction ChatPopup() {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const togglePopup = () => setIsOpen(!isOpen);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isOpen) scrollToBottom();\r\n  }, [messages, isOpen]);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: 'user', text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n    setInput('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await callGptWithImage(input);\r\n      const aiMessage = { sender: 'ai', text: response };\r\n      setMessages((prev) => [...prev, aiMessage]);\r\n    } catch (error) {\r\n      setMessages((prev) => [...prev, { sender: 'ai', text: 'Lá»—i khi pháº£n há»“i, vui lÃ²ng thá»­ láº¡i.' }]);\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(scrollToBottom, 100);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button className=\"chat-button\" onClick={togglePopup}>\r\n        ðŸ’¬\r\n      </button>\r\n      {isOpen && (\r\n        <div className=\"chat-popup\">\r\n          <div className=\"chat-header\">\r\n            <span>TÆ° váº¥n AI</span>\r\n            <button onClick={togglePopup}>âœ–</button>\r\n          </div>\r\n          <div className=\"chat-body\">\r\n            {messages.map((msg, i) => (\r\n              <div key={i} className={`chat-message ${msg.sender}`}>\r\n                <div dangerouslySetInnerHTML={{ __html: msg.text.replace(/\\n/g, '<br />') }} />\r\n              </div>\r\n            ))}\r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n          <div className=\"chat-footer\">\r\n            <textarea\r\n              value={input}\r\n              onChange={(e) => setInput(e.target.value)}\r\n              onKeyDown={handleKeyPress}\r\n              placeholder=\"Nháº­p tin nháº¯n...\"\r\n              rows={2}\r\n            />\r\n            <button onClick={sendMessage} disabled={loading}>\r\n              {loading ? '...' : 'Gá»­i'}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ChatPopup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}