{"ast":null,"code":"// src/utils/geminiApi.js\nexport const callGeminiWithPrompt = async prompt => {\n  const system_prompt = `Bạn là một trợ lý du lịch thông minh, có thể tư vấn dựa trên thời gian, địa điểm, mục đích chuyến đi. Với mỗi câu hỏi, hãy cung cấp câu trả lời theo cấu trúc sau :\n- Dự báo thời tiết (nếu có địa điểm và ngày cụ thể)\n  <ghi nội dung>,\n\n- Gợi ý hoạt động phù hợp\n  <ghi nội dung>,\n\n- Danh sách vật dụng nên mang theo\n  <ghi nội dung>,\n  \n- Lưu ý đặc biệt nếu có\n  <ghi nội dung>.\nTrả lời ngắn gọn, dễ hiểu, rõ ràng từng mục, thực tế và giới hạn trong 200 tokens.`;\n  const payload = {\n    contents: [{\n      role: \"user\",\n      parts: [{\n        text: system_prompt\n      }, {\n        text: prompt\n      }]\n    }],\n    generationConfig: {\n      temperature: 0.7,\n      maxOutputTokens: 1000\n    }\n  };\n  try {\n    var _data$candidates, _data$candidates$, _data$candidates$$con, _data$candidates$$con2, _data$candidates$$con3;\n    const response = await fetch(\"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyD2l-YV0kiDkxdmNrac-dO-THEQVSWKdtE\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(payload)\n    });\n    if (!response.ok) {\n      const text = await response.text();\n      throw new Error(`Lỗi Gemini: ${response.status} - ${text}`);\n    }\n    const data = await response.json();\n\n    // Gemini trả về data dạng candidates → content → parts\n    return (data === null || data === void 0 ? void 0 : (_data$candidates = data.candidates) === null || _data$candidates === void 0 ? void 0 : (_data$candidates$ = _data$candidates[0]) === null || _data$candidates$ === void 0 ? void 0 : (_data$candidates$$con = _data$candidates$.content) === null || _data$candidates$$con === void 0 ? void 0 : (_data$candidates$$con2 = _data$candidates$$con.parts) === null || _data$candidates$$con2 === void 0 ? void 0 : (_data$candidates$$con3 = _data$candidates$$con2[0]) === null || _data$candidates$$con3 === void 0 ? void 0 : _data$candidates$$con3.text) || \"Không có phản hồi.\";\n  } catch (error) {\n    console.error(\"Gemini API error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["callGeminiWithPrompt","prompt","system_prompt","payload","contents","role","parts","text","generationConfig","temperature","maxOutputTokens","_data$candidates","_data$candidates$","_data$candidates$$con","_data$candidates$$con2","_data$candidates$$con3","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","candidates","content","error","console"],"sources":["D:/Project_EXE/client/src/utils/gptApi.js"],"sourcesContent":["// src/utils/geminiApi.js\r\nexport const callGeminiWithPrompt = async (prompt) => {\r\n  const system_prompt = `Bạn là một trợ lý du lịch thông minh, có thể tư vấn dựa trên thời gian, địa điểm, mục đích chuyến đi. Với mỗi câu hỏi, hãy cung cấp câu trả lời theo cấu trúc sau :\r\n- Dự báo thời tiết (nếu có địa điểm và ngày cụ thể)\r\n  <ghi nội dung>,\r\n\r\n- Gợi ý hoạt động phù hợp\r\n  <ghi nội dung>,\r\n\r\n- Danh sách vật dụng nên mang theo\r\n  <ghi nội dung>,\r\n  \r\n- Lưu ý đặc biệt nếu có\r\n  <ghi nội dung>.\r\nTrả lời ngắn gọn, dễ hiểu, rõ ràng từng mục, thực tế và giới hạn trong 200 tokens.`;\r\n\r\n  const payload = {\r\n    contents: [\r\n      {\r\n        role: \"user\",\r\n        parts: [\r\n          { text: system_prompt },\r\n          { text: prompt }\r\n        ],\r\n      },\r\n    ],\r\n    generationConfig: {\r\n      temperature: 0.7,\r\n      maxOutputTokens: 1000,\r\n    },\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(\r\n      \"https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=AIzaSyD2l-YV0kiDkxdmNrac-dO-THEQVSWKdtE\",\r\n      {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(payload),\r\n      }\r\n    );\r\n\r\n    if (!response.ok) {\r\n      const text = await response.text();\r\n      throw new Error(`Lỗi Gemini: ${response.status} - ${text}`);\r\n    }\r\n\r\n    const data = await response.json();\r\n\r\n    // Gemini trả về data dạng candidates → content → parts\r\n    return data?.candidates?.[0]?.content?.parts?.[0]?.text || \"Không có phản hồi.\";\r\n  } catch (error) {\r\n    console.error(\"Gemini API error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,oBAAoB,GAAG,MAAOC,MAAM,IAAK;EACpD,MAAMC,aAAa,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF;EAEjF,MAAMC,OAAO,GAAG;IACdC,QAAQ,EAAE,CACR;MACEC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,CACL;QAAEC,IAAI,EAAEL;MAAc,CAAC,EACvB;QAAEK,IAAI,EAAEN;MAAO,CAAC;IAEpB,CAAC,CACF;IACDO,gBAAgB,EAAE;MAChBC,WAAW,EAAE,GAAG;MAChBC,eAAe,EAAE;IACnB;EACF,CAAC;EAED,IAAI;IAAA,IAAAC,gBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,sIAAsI,EACtI;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,OAAO;IAC9B,CACF,CAAC;IAED,IAAI,CAACa,QAAQ,CAACO,EAAE,EAAE;MAChB,MAAMhB,IAAI,GAAG,MAAMS,QAAQ,CAACT,IAAI,CAAC,CAAC;MAClC,MAAM,IAAIiB,KAAK,CAAC,eAAeR,QAAQ,CAACS,MAAM,MAAMlB,IAAI,EAAE,CAAC;IAC7D;IAEA,MAAMmB,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;;IAElC;IACA,OAAO,CAAAD,IAAI,aAAJA,IAAI,wBAAAf,gBAAA,GAAJe,IAAI,CAAEE,UAAU,cAAAjB,gBAAA,wBAAAC,iBAAA,GAAhBD,gBAAA,CAAmB,CAAC,CAAC,cAAAC,iBAAA,wBAAAC,qBAAA,GAArBD,iBAAA,CAAuBiB,OAAO,cAAAhB,qBAAA,wBAAAC,sBAAA,GAA9BD,qBAAA,CAAgCP,KAAK,cAAAQ,sBAAA,wBAAAC,sBAAA,GAArCD,sBAAA,CAAwC,CAAC,CAAC,cAAAC,sBAAA,uBAA1CA,sBAAA,CAA4CR,IAAI,KAAI,oBAAoB;EACjF,CAAC,CAAC,OAAOuB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}