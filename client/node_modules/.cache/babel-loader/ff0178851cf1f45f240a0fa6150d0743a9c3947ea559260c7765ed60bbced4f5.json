{"ast":null,"code":"// src/utils/weatherApi.js\nexport const getWeather = async (location, date = \"today\") => {\n  const apiKey = \"8623a741c35ab9e72089f6214e948cd4\"; // key từ openweathermap\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(location)}&units=metric&lang=vi&appid=${apiKey}`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error(\"Lỗi khi lấy dữ liệu thời tiết\");\n    const data = await response.json();\n    let forecast;\n    if (date === \"today\") {\n      forecast = data.list[0]; // dự báo gần nhất\n    } else {\n      // Tìm forecast gần nhất khớp với ngày được yêu cầu\n      forecast = data.list.find(item => item.dt_txt.startsWith(date) // format: \"2025-08-28\"\n      );\n    }\n    if (!forecast) {\n      throw new Error(\"Không tìm thấy dự báo cho ngày được yêu cầu\");\n    }\n    const weather = {\n      location: data.city.name,\n      temp: forecast.main.temp,\n      description: forecast.weather[0].description,\n      humidity: forecast.main.humidity,\n      wind: forecast.wind.speed,\n      date: forecast.dt_txt\n    };\n    return weather;\n  } catch (error) {\n    console.error(\"Weather API error:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getWeather","location","date","apiKey","url","encodeURIComponent","response","fetch","ok","Error","data","json","forecast","list","find","item","dt_txt","startsWith","weather","city","name","temp","main","description","humidity","wind","speed","error","console"],"sources":["D:/Project_EXE/client/src/utils/weatherApi.js"],"sourcesContent":["// src/utils/weatherApi.js\r\nexport const getWeather = async (location, date = \"today\") => {\r\n  const apiKey = \"8623a741c35ab9e72089f6214e948cd4\"; // key từ openweathermap\r\n  const url = `https://api.openweathermap.org/data/2.5/forecast?q=${encodeURIComponent(\r\n    location\r\n  )}&units=metric&lang=vi&appid=${apiKey}`;\r\n\r\n  try {\r\n    const response = await fetch(url);\r\n    if (!response.ok) throw new Error(\"Lỗi khi lấy dữ liệu thời tiết\");\r\n    const data = await response.json();\r\n\r\n    let forecast;\r\n    if (date === \"today\") {\r\n      forecast = data.list[0]; // dự báo gần nhất\r\n    } else {\r\n      // Tìm forecast gần nhất khớp với ngày được yêu cầu\r\n      forecast = data.list.find((item) =>\r\n        item.dt_txt.startsWith(date) // format: \"2025-08-28\"\r\n      );\r\n    }\r\n\r\n    if (!forecast) {\r\n      throw new Error(\"Không tìm thấy dự báo cho ngày được yêu cầu\");\r\n    }\r\n\r\n    const weather = {\r\n      location: data.city.name,\r\n      temp: forecast.main.temp,\r\n      description: forecast.weather[0].description,\r\n      humidity: forecast.main.humidity,\r\n      wind: forecast.wind.speed,\r\n      date: forecast.dt_txt,\r\n    };\r\n\r\n    return weather;\r\n  } catch (error) {\r\n    console.error(\"Weather API error:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,IAAI,GAAG,OAAO,KAAK;EAC5D,MAAMC,MAAM,GAAG,kCAAkC,CAAC,CAAC;EACnD,MAAMC,GAAG,GAAG,sDAAsDC,kBAAkB,CAClFJ,QACF,CAAC,+BAA+BE,MAAM,EAAE;EAExC,IAAI;IACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,CAAC;IACjC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,+BAA+B,CAAC;IAClE,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAElC,IAAIC,QAAQ;IACZ,IAAIV,IAAI,KAAK,OAAO,EAAE;MACpBU,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3B,CAAC,MAAM;MACL;MACAD,QAAQ,GAAGF,IAAI,CAACG,IAAI,CAACC,IAAI,CAAEC,IAAI,IAC7BA,IAAI,CAACC,MAAM,CAACC,UAAU,CAACf,IAAI,CAAC,CAAC;MAC/B,CAAC;IACH;IAEA,IAAI,CAACU,QAAQ,EAAE;MACb,MAAM,IAAIH,KAAK,CAAC,6CAA6C,CAAC;IAChE;IAEA,MAAMS,OAAO,GAAG;MACdjB,QAAQ,EAAES,IAAI,CAACS,IAAI,CAACC,IAAI;MACxBC,IAAI,EAAET,QAAQ,CAACU,IAAI,CAACD,IAAI;MACxBE,WAAW,EAAEX,QAAQ,CAACM,OAAO,CAAC,CAAC,CAAC,CAACK,WAAW;MAC5CC,QAAQ,EAAEZ,QAAQ,CAACU,IAAI,CAACE,QAAQ;MAChCC,IAAI,EAAEb,QAAQ,CAACa,IAAI,CAACC,KAAK;MACzBxB,IAAI,EAAEU,QAAQ,CAACI;IACjB,CAAC;IAED,OAAOE,OAAO;EAChB,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}